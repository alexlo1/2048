{"version":3,"sources":["constants/colors.js","components/Tile.jsx","components/Board.jsx","constants/constants.js","helpers/gameHelpers.js","App.js","serviceWorker.js","index.js"],"names":["colors","0","2","4","8","16","32","64","128","256","512","1024","2048","default","StyledTile","styled","className","value","props","StyledRow","values","StyledBoard","slice","BOARD_SIZE","Math","pow","getValue","i","j","rotateTiles","direction","rotatedValues","BOARD_WIDTH","push","undoRotateTiles","left","right","up","down","getRow","rowNumber","slideAndMergeRow","row","newRow","scoreChange","merged","Array","fill","curr","initValues","initialValues","floor","random","StyledAppContainer","children","onKeyDown","tabIndex","InfoContainer","div","StyledScore","score","StyledButton","button","App","useState","setValues","setScore","updateValuesAndScore","tempValues","currentValue","nextValue","canSlideTiles","newValues","newScore","concat","slideTiles","freeTiles","length","generateNewTile","e","key","toLowerCase","pressKey","onClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6b8d48ea.chunk.js","sourcesContent":["const colors = {\n  0: '#607d8b',\n  2: '#9c27b0',\n  4: '#673ab7',\n  8: '#3f51b5',\n  16: '#1976d2',\n  32: '#448aff',\n  64: '#00796b',\n  128: '#43a047',\n  256: '#689f38',\n  512: '#ef6c00',\n  1024: '#f44336',\n  2048: '#e91e63',\n  default: '#e040fb',\n};\n\nexport default colors;\n","import React from 'react';\nimport styled from 'styled-components'\nimport colors from '../constants/colors';\n\nconst Tile = ({ className, value }) => {\n  return (\n    <div className={className}>\n      {value !== 0 && value}\n    </div>\n  );\n};\n\nconst StyledTile = styled(Tile)`\n  width: 90px;\n  height: 90px;\n  border-radius: 5px;\n  background: ${props => colors[props.value] || colors.default};\n  color: white;\n  font-size: 30px;\n  line-height: 90px;\n`;\n\nexport default StyledTile;\n","import React from 'react';\nimport styled from 'styled-components'\nimport Tile from './Tile.jsx';\n\nconst Row = ({ className, values }) => {\n  return (\n    <div className={className}>\n      <Tile value={values[0]} />\n      <Tile value={values[1]} />\n      <Tile value={values[2]} />\n      <Tile value={values[3]} />\n    </div>\n  );\n};\n\nconst StyledRow = styled(Row)`\n  width: 400px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Board = ({ className, values }) => {\n  return (\n    <div className={className}>\n      <StyledRow values={values.slice(0, 4)} />\n      <StyledRow values={values.slice(4, 8)} />\n      <StyledRow values={values.slice(8, 12)} />\n      <StyledRow values={values.slice(12, 16)} />\n    </div>\n  );\n};\n\nconst StyledBoard = styled(Board)`\n  width: 400px;\n  height: 400px;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: space-between;\n`;\n\nexport default StyledBoard;\n","export const BOARD_WIDTH = 4;\nexport const BOARD_SIZE = Math.pow(BOARD_WIDTH, 2);\n","import { BOARD_WIDTH, BOARD_SIZE } from '../constants/constants';\n\nconst getValue = (values, i, j) => {\n  return values[i * BOARD_WIDTH + j];\n};\n\nconst rotateTiles = (values, direction) => {\n  const rotatedValues = [];\n  switch (direction) {\n    case 'left':\n      return values;\n    case 'right':\n      for (let i = BOARD_WIDTH - 1; i >= 0; i--) {\n        for (let j = BOARD_WIDTH - 1; j >= 0; j--) {\n          rotatedValues.push(values[i * BOARD_WIDTH + j]);\n        }\n      }\n      return rotatedValues;\n    case 'up':\n      for (let j = BOARD_WIDTH - 1; j >= 0; j--) {\n        for (let i = 0; i < BOARD_WIDTH; i++) {\n          rotatedValues.push(values[i * BOARD_WIDTH + j]);\n        }\n      }\n      return rotatedValues;\n    case 'down':\n      for (let j = 0; j < BOARD_WIDTH; j++) {\n        for (let i = BOARD_WIDTH - 1; i >= 0; i--) {\n          rotatedValues.push(values[i * BOARD_WIDTH + j]);\n        }\n      }\n      return rotatedValues;\n    default:\n      return values;\n  }\n};\n\nconst undoRotateTiles = (values, direction) => {\n  const oppositeDirection = {\n    left: 'left',\n    right: 'right',\n    up: 'down',\n    down: 'up',\n  };\n  return rotateTiles(values, oppositeDirection[direction]);\n};\n\nconst getRow = (values, rowNumber) => {\n  return values.slice(rowNumber * BOARD_WIDTH, (rowNumber + 1) * BOARD_WIDTH);\n};\n\nconst slideAndMergeRow = (row) => {\n  let newRow = [...row];\n  let scoreChange = 0;\n  let merged = Array(BOARD_WIDTH).fill(false);\n  for (let i = 1; i < BOARD_WIDTH; i++) {\n    let curr = i-1;\n    while (curr >= 0 && !merged[curr+1]) {\n      if (newRow[curr] === 0) {\n        newRow[curr] = newRow[curr+1];\n      } else if (newRow[curr] === newRow[curr + 1]) {\n        newRow[curr] = newRow[curr] * 2;\n        scoreChange += newRow[curr];\n        merged[curr] = true;\n      } else {\n        break;\n      }\n      newRow[curr+1] = 0;\n      curr--;\n    }\n  }\n  return [newRow, scoreChange];\n};\n\nexport const initValues = () => {\n  const initialValues = Array(BOARD_SIZE).fill(0);\n  initialValues[Math.floor(Math.random() * BOARD_SIZE / 2)] = 2;\n  initialValues[Math.floor((Math.random() + 1) * BOARD_SIZE / 2)] = 2;\n  return initialValues;\n};\n\nexport const canSlideTiles = (values, direction) => {\n  let tempValues = rotateTiles(values, direction);\n  for (let i = 0; i < BOARD_WIDTH; i++) {\n    for (let j = 1; j < BOARD_WIDTH; j++) {\n      const currentValue = getValue(tempValues, i, j);\n      const nextValue = getValue(tempValues, i, j-1);\n      if (currentValue !== 0) {\n        if (nextValue === 0 || nextValue === currentValue) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const slideTiles = (values, score, direction) => {\n  let tempValues = rotateTiles(values, direction);\n  let newValues = [];\n  let newScore = score;\n  for (let i = 0; i < BOARD_WIDTH; i++) {\n    let newRow = [];\n    let scoreChange = 0;\n    [newRow, scoreChange] = slideAndMergeRow(getRow(tempValues, i));\n    newValues = newValues.concat(newRow);\n    newScore += scoreChange;\n  }\n  return [undoRotateTiles(newValues, direction), newScore];\n};\n\nexport const generateNewTile = (values) => {\n  let freeTiles = [];\n  for (let i = 0; i < BOARD_SIZE; i++) {\n    if (values[i] === 0) freeTiles.push(i);\n  }\n  let index = Math.floor(Math.random() * freeTiles.length);\n  values[freeTiles[index]] = Math.random() < 0.5 ? 2 : 4;\n  return values;\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Board from './components/Board.jsx';\nimport { initValues, canSlideTiles, slideTiles, generateNewTile } from './helpers/gameHelpers';\n\nconst initialValues = initValues();\n\nconst AppContainer = ({ className, children, onKeyDown }) => {\n  return (\n    <div\n      className={className}\n      tabIndex=\"0\"\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst StyledAppContainer = styled(AppContainer)`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  text-align: center;\n`;\n\nconst InfoContainer = styled.div`\n  width: 400px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Score = ({ className, score }) => {\n  return (\n    <div className={className}>Score: {score}</div>\n  );\n};\n\nconst StyledScore = styled(Score)`\n  margin: 10px;\n  line-height: 50px;\n  color: white;\n  font-size: 20px;\n`;\n\nconst StyledButton = styled.button`\n  width: 180px;\n  height: 50px;\n  margin: 10px;\n  padding: 10px;\n  border: 2px solid white;\n  border-radius: 10px;\n  background: #282c34;\n  color: white;\n  font-size: 20px;\n  cursor: pointer;\n\n  :hover {\n    background: white;\n    color: #282c34;\n  }\n`;\n\nconst App = () => {\n  const [values, setValues] = useState(initialValues);\n  const [score, setScore] = useState(0);\n\n  const updateValuesAndScore = (direction) => {\n    if (canSlideTiles(values, direction)) {\n      let newValues = [...values];\n      let newScore = score;\n      [newValues, newScore] = slideTiles(newValues, newScore, direction);\n      newValues = generateNewTile(newValues);\n\n      setScore(newScore);\n      setValues(newValues);\n    }\n  };\n\n  const pressKey = (e) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'ArrowUp':\n      case 'ArrowDown':\n        updateValuesAndScore(e.key.slice(5).toLowerCase());\n        return;\n      default:\n    };\n  };\n\n  return (\n    <StyledAppContainer onKeyDown={e => pressKey(e)}>\n      <InfoContainer>\n        <StyledScore score={score} />\n        <StyledButton\n          onClick={() => {\n            setValues(initValues());\n            setScore(0);\n          }}\n        >\n          New Game\n        </StyledButton>\n      </InfoContainer>\n      <Board values={values} />\n    </StyledAppContainer>\n  );\n};\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}